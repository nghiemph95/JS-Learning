/** M·ª•c ƒë√≠ch:
 * 1. Duy·ªát node, duy·ªát parent
 * 2. Ph√¢n bi·ªát parentNode v√† parentElement
 */

/** Overview
 * 1. Node: c√≥ nhi·ªÅu lo·∫°i Text, Element, Comment...
 * 2. Element: html, svg element: div, p, section, h1,...
 * 3. Children
 */

document; // root node

document.documentElement; // html
document.body; // body
document.head; // head

/** Duy·ªát node */
Node.parentNode;
Node.childNodes;
Node.firstChild;
Node.lastChild;
Node.previousSibling;
Node.nextSibling;

/** Element ONLY */
Node.parentElement;
Element.children;
Element.firstElementChild;
Element.lastElementChild;
Element.previousElementSibling;
Element.nextElementSibling;

/** Example */
<html>
  <head>
    <title>Parcel Sandbox</title>
    <meta charset="UTF-8" />
  </head>
  <body>
    <h1>Easy Frontend</h1>
    <p>Learning DOM is so easy! :P</p>
    <script src="src/index.js"></script>
  </body>
</html>;

console.log(document.body.parentNode); // html
console.log(document.body.childNodes);
// [text, comment, text, h1, text, p, text, script, text] (9 items ü§£ )
console.log(document.body.firstChild); // text
console.log(document.body.lastChild); // text
console.log(document.body.previousSibling); // text
console.log(document.body.nextSibling); // null

/** Only elements traversal - B·ªô element h·ªØu d·ª•ng v√† ƒë√∫ng mong mu·ªën h∆°n*/
console.log(document.body.parentElement); // html
console.log(document.body.children);
// [h1, p, script] (only 3 items üòé )
console.log(document.body.firstElementChild); // h1
console.log(document.body.lastElementChild); // script
console.log(document.body.previousElementSibling); // head
console.log(document.body.nextElementSibling); // null

/** parentNode v√† parentElement kh√°c nhau c√°i g√¨
 * parentNode: return v·ªÅ th·∫±ng cha, n√≥ l√† c√°i g√¨ th√¨ return v·ªÅ c√°i ƒë√≥
 * parentElement: return v·ªÅ th cha n·∫øu n√≥ l√† 1 element, n·∫øu ko th√¨ return null
 */
